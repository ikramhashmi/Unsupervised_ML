# -*- coding: utf-8 -*-
"""PCA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iCNX8V92C7bx1bFnS4uZyrqmKlaQn6pw
"""

import kagglehub

# Download latest version
path = kagglehub.dataset_download("fedesoriano/heart-failure-prediction")

print("Path to dataset files:", path)

!cp -r /root/.cache/kagglehub/datasets/fedesoriano/heart-failure-prediction/versions/1 .

import pandas as pd

df = pd.read_csv("/content/1/heart.csv")
df.head()

df.shape

x['Oldpeak']=x['Oldpeak'].astype(int)

df.shape

x=df.drop(columns=['HeartDisease'])
y=df['HeartDisease']

cat=x.select_dtypes(include='object').columns
num=x.select_dtypes(include='number').columns

cat

num

from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import StandardScaler

scaler=StandardScaler()
scaler.fit(x[num])
x[num]=scaler.transform(x[num])

encoder = LabelEncoder()
for col in cat:
  x[col]=encoder.fit_transform(x[col])

from sklearn.decomposition import PCA
pca=PCA(0.95)
new_x=pca.fit_transform(x)

new_x.shape

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(new_x,y,test_size=0.2,random_state=42)

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report
from sklearn.model_selection import GridSearchCV

from sklearn.ensemble import RandomForestClassifier

param_grid = {
    'n_estimators': [100, 300, 500],
    'max_depth': [10, 20, 30, None],
    'min_samples_split': [2, 5, 10],
    'min_samples_leaf': [1, 2, 4],
    'max_features': ['sqrt', 'log2'],
    'bootstrap': [True, False]
}
model2=RandomForestClassifier()
grid_search = GridSearchCV(model2, param_grid, cv=5, scoring='accuracy', n_jobs=-1)
grid_search.fit(x_train, y_train)

y_pred2=grid_search.predict(x_test)

score2=accuracy_score(y_test,y_pred2)
print(score2)

